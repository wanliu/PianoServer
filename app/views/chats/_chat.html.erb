<%= content_for :title, @target.try(:nickname) || @target.try(:name) %>
<%= nav_back_button %>
<%= content_for :module, :chat %>

<div class="container">
  <div class="row">
    <div class="chat-main-container">
      <%= render "chat_order_header" %>
      <div class="container chat-order-body">
        <div class="row">
          <div class="order-table-wrap col-xs-12 col-sm-6">
            <div class="order-table">
              <%= render "chat_order_table" %>
            </div>
            <div class="order-buttons clearfix">
              <div class="buttons-execute">
                <div class="col-sm-6 col-xs-6 btn-wrap left">
                  <button class="btn btn-confirm-order">确认订单</button>
                </div>
                <div class="col-sm-6 col-xs-6 btn-wrap right">
                  <button class="btn btn-help">帮助</button>
                </div>
              </div>
              <div class="buttons-consult">
                <div class="col-sm-6 col-xs-6 btn-wrap left">
                  <button class="btn btn-lg btn-agrees">按住3秒同意</button>
                </div>
                <div class="col-sm-6 col-xs-6 btn-wrap right">
                  <button class="btn btn-lg btn-disagrees">拒绝</button>
                </div>
              </div>
            </div>
          </div>

          <div class="chat-list col-xs-12 col-sm-6">
            <div class="chat-inner" >
              <div class="message-list clearfix">
              </div>
            </div>

            <%= render "chat_input" %>
          </div>

          <%= render "chat_linkmen" %>
        </div>
      </div>
    </div>
  </div>
</div>

<script type="text/javascript">
  // $(function(){
    var StatusLoadUrl = window.StatusLoadUrl,
        MiniTable     = window.MiniTable,
        Chat          = window.Chat,
        userSocket    = window.userSocket,
        greetings     = '<%= @greetings %>',
        chatChannelId,
        targetId;

    <% unless @target.nil? %>
      targetId  = "<%= @target.id %>";
      userId = "<%= current_anonymous_or_user.id %>";
      chatChannelId = 'p' + targetId; // [targetId, userId].sort().join(":");
    <% end %>

    Chat.defaultOptions.avatarDefault = '<%= image_path "avatar.gif" %>';
    var $img = $('.chat-order-image')[0];
    var stateLoad = new StatusLoadUrl($img);

    <% unless @intention.nil? %>
    var order = <%=raw @intention.origin_hash.to_json %>;
      <% if Settings.dev.feature.order.chat %>
      var miniTable = new MiniTable($('.chat-order-header'), $('.order-table-wrap'), order);
      <% end %>
    <% end %>

    if (!targetId) {
      alert('无效的聊天对象！');
      $('.btn-send').attr('disabled', 'disabled');
    } else {

      var chat = new Chat($('.chat-order-header'), chatChannelId, {
        sendBtn: $('.btn-send'),
        greetings: greetings
      });

      <% if Settings.dev.feature.order.chat and @intention %>
      chat.setTable(miniTable);
      <% end %>

      chat.on('init', function(e, socket) {
        var chatId = '<%= @chat.id %>';
        socket.emit('set', { channelId: chatChannelId, key: 'chat_id', value: chatId });

        <% unless @intention.nil? %>
        var intentionId = '<%= @intention.id %>';
        socket.emit('set', { channelId: chatChannelId, key: 'intention_id', value: intentionId })
        <% end %>
      });

      $(document).on('page:before-unload', function() {
        chat.leave();
        $(window).off('resize.linkmen');
      });

      $(document).off('page:load').on('page:load', function() {
        window.noticeCenter.reloadUnreadMessage();
      });
    }

    <% if Settings.dev.feature.linkmen %>
      /**var hammer = new Hammer.Manager($('body')[0]),
          chatListShown = $(window).width() > 867;

      hammer.add(new Hammer.Swipe({
        direction: Hammer.DIRECTION_HORIZONTAL,
        velocity: 0.2
      }));

      hammer.on('swipeleft', function(event) {
        var $target = $(event.target);

        if ($target.is('.order-table .list-group-item') || $target.parents('.order-table .list-group-item').length > 0) {
          return;
        }

        var width = $(window).width();

        if (width <= 867) {
          chatListShown = false;

          $('.chat-linkman-container').animate({
            'left': '-80%'
          }, 250, function() {
            $('.linkmen-overlayer').hide();
          });
        }
      });

      hammer.on('swiperight', function(event) {
        var $target = $(event.target);

        if ($target.is('.order-table .list-group-item') || $target.parents('.order-table .list-group-item').length > 0) {
          return;
        }

        var width = $(window).width();

        if (width <= 867) {
          chatListShown = true;

          $('.chat-linkman-container').animate({
            'left': '0'
          }, 250, function() {
            $('.linkmen-overlayer').show();
          });
        }
      });

      $(window).on('resize.linkmen', function() {
        var width = $(window).width();

        if (width > 867) {
          $('.chat-linkman-container').css('left', '-60px');
          $('.linkmen-overlayer').hide();
        } else {
          $('.chat-linkman-container').css('left', chatListShown ? '0' : '-80%');

          if (chatListShown) {
            $('.linkmen-overlayer').show();
          }
        }
      });*/

      $('.chat-linkman-container .remove-linkman').on('click', function(event) {
        event.preventDefault();
        event.stopPropagation();

        $(this).parent().slideUp('fast', function() {
          $(this).remove();
        });
      });
    <% end %>
  // });
</script>
